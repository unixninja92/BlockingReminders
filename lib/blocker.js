// Generated by CoffeeScript 1.9.1
(function() {
  this.Blocker = (function() {
    function Blocker() {
      this.loggedIn = false;
      this.isWhitelist = false;
      this.list = ['cnn.com', 'yahoo.com'];
      this.areBlocking = true;
      this.toPage = false;
    }

    Blocker.prototype.getList = function() {
      return this.list;
    };

    Blocker.prototype.parseJson = function(json) {};

    Blocker.prototype.isWhitelist = function() {
      return this.isWhitelist;
    };

    Blocker.prototype.makePattern = function(url) {
      return RegExp("^(https?:\\/\\/)?([\\da-z\\.-]+)?" + url + "([\\/\\w\\.-]*)*\\/?$");
    };

    Blocker.prototype.block = function(id, url) {
      if (this.toPage) {
        return console.log("page");
      } else {
        console.log("rediret");
        return chrome.tabs.update(id, {
          url: chrome.extension.getURL('blocked.html')
        });
      }
    };

    Blocker.prototype.checkUrl = function(id, url, testmode) {
      var bool, domain, i, len, ref;
      if (this.list != null) {
        bool = false;
        ref = this.list;
        for (i = 0, len = ref.length; i < len; i++) {
          domain = ref[i];
          if (url.match(this.makePattern(domain))) {
            bool = true;
            break;
          }
        }
        if (this.isWhitelist) {
          bool = !bool;
        }
        console.log("test");
        if (!testmode && bool) {
          this.block(id, url);
        }
        return bool;
      }
    };

    Blocker.prototype.run = function(tab) {
      if (!this.areBlocking) {
        return false;
      }
      return this.checkUrl(tab.id, tab.url, false);
    };

    return Blocker;

  })();

}).call(this);
